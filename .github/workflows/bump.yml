name: Deploy API Documentation to Bump.sh

on:
  push:
    branches: [main]
    paths:
      - '**/*.yaml'
      - '**/*.yml'
  workflow_dispatch:

jobs:
  deploy-to-bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js v20
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Bump.sh CLI
        run: |
          npm install -g bump-cli

      - name: Custom script for x-topics import
        run: |
          # Create a Python script for direct text replacement
          cat > direct_replace.py << 'EOF'
          import re
          import os
          import sys
          import yaml  # Just for initial detection, not for parsing

          def main():
              # Read the main OpenAPI file
              with open('openapi.yaml', 'r') as f:
                  content = f.read()
              
              # Detect if there's an x-topics reference
              pattern = r"x-topics:(?:\s+)?\$ref:\s+['\"]?([\./\w-]+\.ya?ml)['\"]?"
              match = re.search(pattern, content)
              
              if match:
                  topics_file = match.group(1)
                  if topics_file.startswith('./'):
                      topics_file = topics_file[2:]
                      
                  print(f"Found x-topics reference to {topics_file}")
                  
                  # Read the topics file
                  if not os.path.exists(topics_file):
                      print(f"Error: Topics file {topics_file} not found!")
                      sys.exit(1)
                      
                  with open(topics_file, 'r') as f:
                      topics_content = f.read()
                      
                  # Extract indentation level from the x-topics line
                  x_topics_line = match.group(0)
                  indent = re.match(r"(\s*)x-topics", x_topics_line).group(1)
                  
                  # Replace the x-topics reference with the actual content
                  # We need to adjust the indentation for all lines in the topics file
                  adjusted_topics = []
                  first_line = True
                  
                  for line in topics_content.split('\n'):
                      if not line.strip():
                          adjusted_topics.append(line)  # Keep empty lines as is
                      elif first_line:
                          # First line replaces the x-topics: $ref: line
                          adjusted_topics.append(f"{indent}x-topics: {line.lstrip()}")
                          first_line = False
                      else:
                          # Add proper indentation to subsequent lines
                          adjusted_topics.append(f"{indent}  {line}")
                  
                  adjusted_topics_content = '\n'.join(adjusted_topics)
                  
                  # Replace the x-topics reference with the indented content
                  replaced_content = re.sub(
                      r"x-topics:\s+\$ref:\s+['\"]?[\./\w-]+\.ya?ml['\"]?",
                      adjusted_topics_content.rstrip(),
                      content
                  )
                  
                  # Write the result to the output file
                  with open('openapi-resolved.yaml', 'w') as f:
                      f.write(replaced_content)
                      
                  print("Successfully created openapi-resolved.yaml with preserved formatting")
              else:
                  print("No x-topics reference found, copying file as is")
                  with open('openapi-resolved.yaml', 'w') as f:
                      f.write(content)

          if __name__ == "__main__":
              main()
          EOF

          # Run the script
          python3 direct_replace.py

      - name: Deploy to Bump.sh
        id: deploy
        run: |
          echo "Deploying to Bump.sh..."
          bump deploy openapi-resolved.yaml --doc omni-v2
        env:
          BUMP_TOKEN: ${{ secrets.BUMP_TOKEN }}

      - name: Summary
        if: always()
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "* Original file: $(wc -c openapi.yaml | awk '{print $1}') bytes" >> $GITHUB_STEP_SUMMARY
          echo "* Resolved file: $(wc -c openapi-resolved.yaml | awk '{print $1}') bytes" >> $GITHUB_STEP_SUMMARY
          echo "* Status: ${{ steps.deploy.outcome }}" >> $GITHUB_STEP_SUMMARY
          echo "* Documentation URL: https://bump.sh/doc/omni-v2" >> $GITHUB_STEP_SUMMARY
