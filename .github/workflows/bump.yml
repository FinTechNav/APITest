name: Deploy API Documentation to Bump.sh

on:
  push:
    branches: [main]
    paths:
      - '**/*.yaml'
      - '**/*.yml'
  workflow_dispatch:

jobs:
  deploy-to-bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js v20
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Bump.sh CLI
        run: |
          npm install -g bump-cli
          pip install --user pyyaml

      - name: Custom script for x-topics import
        run: |
          # Create a Python script that uses a different approach to integrate topics
          cat > direct_replace.py << 'EOF'
          import re
          import yaml

          def main():
              # Read the OpenAPI file
              with open('openapi.yaml', 'r') as f:
                  openapi_content = f.read()
              
              # Read the topics file as raw text
              with open('topics.yaml', 'r') as f:
                  topics_content = f.read()
              
              # Create the replacement pattern
              # We need to properly indent the topics content to match where it will be inserted
              
              # First find the x-topics line in the openapi file to determine indentation
              match = re.search(r'^([\s]*)x-topics:[\s]*\$ref:', openapi_content, re.MULTILINE)
              if not match:
                  print("Could not find x-topics reference in the OpenAPI file")
                  return
              
              # Get the indentation level
              base_indent = match.group(1)
              
              # Prepare the topics content with correct indentation
              # The topics content needs to start right after "x-topics:"
              indented_topics = []
              for i, line in enumerate(topics_content.splitlines()):
                  if i == 0:
                      # The first line replaces "$ref: './topics.yaml'" with "- title: ..."
                      indented_topics.append(line)  # No additional indent for first line
                  else:
                      # All other lines need to be indented to align with the first item
                      indented_topics.append("  " + line)  # Two additional spaces for alignment
              
              # Join the lines back together
              formatted_topics = "\n".join([f"{base_indent}{line}" for line in indented_topics])
              
              # Replace the reference with the actual content
              pattern = r'x-topics:\s*\$ref:\s*[\'"]?[\./\w-]+\.ya?ml[\'"]?'
              replacement = f"x-topics:\n{formatted_topics}"
              updated_content = re.sub(pattern, replacement, openapi_content)
              
              # Write the result to the output file
              with open('openapi-resolved.yaml', 'w') as f:
                  f.write(updated_content)
              
              print("Successfully created openapi-resolved.yaml with exact formatting preserved")

          if __name__ == "__main__":
              main()
          EOF

          # Run the script
          python3 direct_replace.py

      - name: Validate YAML
        run: |
          echo "Validating the resolved YAML file..."
          python3 -c "import yaml; yaml.safe_load(open('openapi-resolved.yaml'))"

      - name: Deploy to Bump.sh
        id: deploy
        run: |
          echo "Deploying to Bump.sh..."
          bump deploy openapi-resolved.yaml --doc omni-v2
        env:
          BUMP_TOKEN: ${{ secrets.BUMP_TOKEN }}

      - name: Summary
        if: always()
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "* Original file: $(wc -c openapi.yaml | awk '{print $1}') bytes" >> $GITHUB_STEP_SUMMARY
          echo "* Resolved file: $(wc -c openapi-resolved.yaml | awk '{print $1}') bytes" >> $GITHUB_STEP_SUMMARY
          echo "* Status: ${{ steps.deploy.outcome }}" >> $GITHUB_STEP_SUMMARY
          echo "* Documentation URL: https://bump.sh/doc/omni-v2" >> $GITHUB_STEP_SUMMARY
