name: Deploy API Documentation to Bump.sh

on:
  push:
    branches: [main]
    paths:
      - '**/*.yaml'
      - '**/*.yml'
  workflow_dispatch:

jobs:
  deploy-to-bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js v20
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Bump.sh CLI
        run: |
          npm install -g bump-cli
          pip install --user pyyaml

      - name: Custom script for x-topics import
        run: |
          # Create a Python script that uses a different approach to integrate topics
          cat > direct_replace.py << 'EOF'
          import re
          import yaml
          import json

          def main():
              # Read the OpenAPI spec
              with open('openapi.yaml', 'r') as f:
                  openapi_content = f.read()
              
              # Parse the OpenAPI spec
              openapi_spec = yaml.safe_load(openapi_content)
              
              # Read the topics file
              with open('topics.yaml', 'r') as f:
                  topics_content = f.read()
              
              # Parse the topics file - force it to preserve strings better
              topics = yaml.safe_load(topics_content)
              
              # Manually update the OpenAPI spec
              openapi_spec['x-topics'] = topics
              
              # Get proper clean YAML representation
              class MyDumper(yaml.Dumper):
                  def increase_indent(self, flow=False, *args, **kwargs):
                      return super().increase_indent(flow=flow, indentless=False)
                  
                  def represent_scalar(self, tag, value, style=None):
                      if style is None and '\n' in value:
                          style = '|'
                      return super().represent_scalar(tag, value, style)
              
              # Write the modified spec
              with open('openapi-resolved.yaml', 'w') as f:
                  yaml.dump(openapi_spec, f, Dumper=MyDumper, default_flow_style=False, 
                          allow_unicode=True, sort_keys=False, width=1000)
              
              print("Successfully created openapi-resolved.yaml with proper YAML formatting")

          if __name__ == "__main__":
              main()
          EOF

          # Run the script
          python3 direct_replace.py

      - name: Validate YAML
        run: |
          echo "Validating the resolved YAML file..."
          python3 -c "import yaml; yaml.safe_load(open('openapi-resolved.yaml'))"

      - name: Deploy to Bump.sh
        id: deploy
        run: |
          echo "Deploying to Bump.sh..."
          bump deploy openapi-resolved.yaml --doc omni-v2
        env:
          BUMP_TOKEN: ${{ secrets.BUMP_TOKEN }}

      - name: Summary
        if: always()
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "* Original file: $(wc -c openapi.yaml | awk '{print $1}') bytes" >> $GITHUB_STEP_SUMMARY
          echo "* Resolved file: $(wc -c openapi-resolved.yaml | awk '{print $1}') bytes" >> $GITHUB_STEP_SUMMARY
          echo "* Status: ${{ steps.deploy.outcome }}" >> $GITHUB_STEP_SUMMARY
          echo "* Documentation URL: https://bump.sh/doc/omni-v2" >> $GITHUB_STEP_SUMMARY
